version: '3'

services:

  caddy:
    image: {your-repo}/micro-caddy-production:1.0.0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /caddy_data:/data
      - /caddy_config:/config

  front-end:
    image: {your-repo}/front-end:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "https://broker.{your-domain}.com"

  broker-service:
    image: {your-repo}/broker-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  
  listener-service:
    image: {your-repo}/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
      
  authentication-service:
    image: {your-repo}/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:
    image: {your-repo}/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    image: {your-repo}/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_ADDRESS: "mail@example.com"
      MAIL_FROM_NAME: "Your Name"
  
  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    deploy:
      mode: replicated
      replicas: 1
  
  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 1
  
  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017" # only neeed because I'll connect to it to see if everything is fine
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == node-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  caddy_data:
    external: true
  caddy_config: